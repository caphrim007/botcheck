#! /usr/bin/env python

from ircbot import SingleServerIRCBot
from irclib import nm_to_n, nm_to_h, irc_lower, ip_numstr_to_quad, ip_quad_to_numstr
import config
import sys
import syslog
import time

class TestBot(SingleServerIRCBot):
	def __init__(self, nickname, server, port=6667):
		SingleServerIRCBot.__init__(self, [(server, port)], nickname, nickname)

		self.connection.add_global_handler("whoreply", self.who_parser)

		self.exempt_from_reporting	= []
		self.is_connected		= 0

	def on_nicknameinuse(self, c, e):
		c.nick(c.get_nickname() + "_")

	def on_ping(self, c, e):
		if self.is_connected:
			time.sleep(3)
			for to_search in self.who_for_users:
				self.connection.who(to_search)
		else:
			self.is_connected = 1

	def who_parser(self, connection, event):
		"""
		Parse a who response from the IRC server
	
		Examples of the output generated by these
		python classes are like so

		['*', '~abbaabbaa', 'adeshnas.company.com', '*.undernet.org', 'brunetu27ek', 'H', '3 Yoda^']
		['#mylittleircbot22', '~buellerfe', 'box.company.com', '*.undernet.org', 'buellerferris', 'H', '0 buellerferris']
		"""

		arguments 	= event.arguments()
		channel		= arguments[0]
		user		= arguments[1]
		host		= arguments[2]
		server		= arguments[3]
		nick		= arguments[4]
		other		= arguments[6]

		if self.exempt_from_reporting.count(nick) < 1:
			if channel == "":
				syslog_mesg = "BOTCHECK - The system "+host+" was found on "+server+" using the nickname "+nick
				syslog.syslog(syslog_mesg)
			else:
				syslog_mesg = "BOTCHECK - The system "+host+" was found in the channel "+channel+" on "+server+" using the nickname "+nick
				syslog.syslog(syslog_mesg)

def main():
	for server in config.hosts:
		if server.count(':') < 1:
			port = 6667
		else:
			(server, port) = server.split(':')

		port = int(port)
		bot 				= TestBot(config.nickname, server, port)
		bot.exempt_from_reporting 	= config.exempt_from_reporting
		bot.who_for_users		= config.who_for_users

		bot.start()

if __name__ == "__main__":
    main()
